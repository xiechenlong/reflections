What happens when you initialize a repository? Why do you need to do it?
增加了一个 .git文件，用来记录文档的历史信息。

How is the staging area different from the working directory and the repository?
What value do you think it offers?
缓存区的存在可以让你一次提交多个文件，因为这些文件可能是属于同一逻辑改动。

How can you use the staging area to make sure you have one commit per logical
change?
git diff 即可查看现在所做的更改，这就可以判断是否是一次完整的逻辑改进，若是则提交。
若太少，则继续添加。但是太多，如何删除？难到还要多次复制？

What are some situations when branches would be helpful in keeping your history
organized? How would branches help?
当我有多种方案时，我就可以用分支的方式来改动程序，而不需要保存多个文件夹。

@Mike Wales, 主分支是稳定的版本，不会有bug。再建立一个开发分支，用于开发。
当你想增加一个功能或修复bug或试验某些功能时也新建一个分支，在这个分支上解决好问题，
再合并到主分支中去。
而且当你对当前这个功能或试验感到厌烦时，可以切换到其它分支。

How do the diagrams help you visualize the branch structure?

What is the result of merging two branches together? Why do we represent it in
the diagram the way we do?

What are the pros and cons of Git's automatic merging vs. always doing merges
manually?
